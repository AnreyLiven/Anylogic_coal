/*C3*/SET SCHEMA PUBLIC
CREATE TABLE IF NOT EXISTS AL_CONFIGURATION ( PROPERTY_NAME VARCHAR(255) NOT NULL UNIQUE , PROPERTY_VALUE LONGVARCHAR ) 
CREATE TABLE IF NOT EXISTS AL_GROUPS ( GROUP_NAME VARCHAR(255) NOT NULL PRIMARY KEY , DESCRIPTION LONGVARCHAR ) 
CREATE TABLE IF NOT EXISTS AL_TABLES ( TABLE_NAME VARCHAR(255) NOT NULL PRIMARY KEY , GROUP_NAME VARCHAR(255) , DESCRIPTION LONGVARCHAR ) 
CREATE TABLE IF NOT EXISTS AL_CUSTOM_TYPE ( TABLE_NAME VARCHAR(255) , COLUMN_NAME VARCHAR(255) , TYPE VARCHAR(255) , NAME VARCHAR(255) ) 
CREATE TABLE IF NOT EXISTS AL_VIEWS ( VIEW_NAME VARCHAR(255) NOT NULL UNIQUE , VIEW_DEFINITION LONGVARCHAR , IS_VALID BOOLEAN ) 
CREATE TABLE IF NOT EXISTS AL_SELECTED_LOG_OBJECTS ( NAME VARCHAR(255) NOT NULL UNIQUE , TYPE VARCHAR(255) ) 
CREATE TABLE IF NOT EXISTS AL_DB_OBJECTS ( NAME VARCHAR(255) NOT NULL UNIQUE , TYPE VARCHAR(255) , USAGE VARCHAR(255) ) 
/*C4*/SET SCHEMA PUBLIC
DISCONNECT
/*C5*/SET SCHEMA PUBLIC
DISCONNECT
/*C6*/SET SCHEMA PUBLIC
DISCONNECT
/*C7*/SET SCHEMA PUBLIC
DISCONNECT
/*C8*/SET SCHEMA PUBLIC
DISCONNECT
/*C9*/SET SCHEMA PUBLIC
DISCONNECT
/*C3*/DISCONNECT
/*C10*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=0
INSERT INTO DB VALUES(0,0,380.64000000000004E0,1060.46304E0,10368.0E0,300.0E0)
DELETE FROM DB WHERE AL_ID=1
INSERT INTO DB VALUES(1,1,377.52000000000004E0,1051.7707200000002E0,10259.2E0,300.0E0)
DELETE FROM DB WHERE AL_ID=2
INSERT INTO DB VALUES(2,2,304.9200000000001E0,849.5071200000003E0,10166.4E0,300.0E0)
DELETE FROM DB WHERE AL_ID=3
INSERT INTO DB VALUES(3,3,363.0E0,1011.3180000000001E0,10124.800000000001E0,300.0E0)
DELETE FROM DB WHERE AL_ID=4
INSERT INTO DB VALUES(4,4,355.74000000000007E0,991.0916400000003E0,10313.599999999999E0,300.0E0)
DELETE FROM DB WHERE AL_ID=5
INSERT INTO DB VALUES(5,5,312.17999999999995E0,869.7334799999999E0,10745.6E0,300.0E0)
DELETE FROM DB WHERE AL_ID=6
INSERT INTO DB VALUES(6,6,304.9200000000001E0,849.5071200000003E0,11256.0E0,300.0E0)
DELETE FROM DB WHERE AL_ID=7
INSERT INTO DB VALUES(7,7,392.04E0,1092.2234400000002E0,10729.12E0,300.0E0)
DELETE FROM DB WHERE AL_ID=8
INSERT INTO DB VALUES(8,8,338.4E0,942.7824E0,10257.6E0,300.0E0)
DELETE FROM DB WHERE AL_ID=9
INSERT INTO DB VALUES(9,9,316.8E0,882.6048000000001E0,10380.800000000001E0,300.0E0)
DELETE FROM DB WHERE AL_ID=10
INSERT INTO DB VALUES(10,10,316.8E0,882.6048000000001E0,11022.4E0,300.0E0)
DELETE FROM DB WHERE AL_ID=11
INSERT INTO DB VALUES(11,11,309.6E0,862.5456E0,10875.199999999999E0,300.0E0)
DELETE FROM DB WHERE AL_ID=12
INSERT INTO DB VALUES(12,12,439.20000000000005E0,1223.6112000000003E0,10972.8E0,300.0E0)
DELETE FROM DB WHERE AL_ID=13
INSERT INTO DB VALUES(13,13,345.59999999999997E0,962.8416E0,10267.2E0,300.0E0)
DELETE FROM DB WHERE AL_ID=14
INSERT INTO DB VALUES(14,14,312.17999999999995E0,869.7334799999999E0,10776.0E0,300.0E0)
DELETE FROM DB WHERE AL_ID=15
INSERT INTO DB VALUES(15,15,377.52000000000004E0,1051.7707200000002E0,11155.2E0,300.0E0)
DELETE FROM DB WHERE AL_ID=16
INSERT INTO DB VALUES(16,16,363.0E0,1011.3180000000001E0,11606.400000000001E0,300.0E0)
DELETE FROM DB WHERE AL_ID=17
INSERT INTO DB VALUES(17,17,363.0E0,1011.3180000000001E0,11249.599999999999E0,300.0E0)
DELETE FROM DB WHERE AL_ID=18
INSERT INTO DB VALUES(18,18,417.24E0,1162.43064E0,10888.0E0,300.0E0)
DELETE FROM DB WHERE AL_ID=19
INSERT INTO DB VALUES(19,19,417.24E0,1162.43064E0,10785.6E0,300.0E0)
DELETE FROM DB WHERE AL_ID=20
INSERT INTO DB VALUES(20,20,417.24E0,1162.43064E0,10768.0E0,300.0E0)
DELETE FROM DB WHERE AL_ID=21
INSERT INTO DB VALUES(21,21,424.56000000000006E0,1182.8241600000003E0,10796.8E0,300.0E0)
DELETE FROM DB WHERE AL_ID=22
INSERT INTO DB VALUES(22,22,420.66E0,1171.95876E0,10849.6E0,300.0E0)
DELETE FROM DB WHERE AL_ID=23
INSERT INTO DB VALUES(23,23,405.90000000000003E0,1130.8374000000003E0,10704.0E0,300.0E0)
COMMIT
DISCONNECT
/*C11*/SET SCHEMA PUBLIC
DISCONNECT
/*C12*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=0
INSERT INTO DB VALUES(0,0,380.64000000000004E0,1060.46304E0,10368.0E0,500.0E0)
DELETE FROM DB WHERE AL_ID=1
INSERT INTO DB VALUES(1,1,377.52000000000004E0,1051.7707200000002E0,10259.2E0,500.0E0)
DELETE FROM DB WHERE AL_ID=2
INSERT INTO DB VALUES(2,2,304.9200000000001E0,849.5071200000003E0,10166.4E0,500.0E0)
DELETE FROM DB WHERE AL_ID=3
INSERT INTO DB VALUES(3,3,363.0E0,1011.3180000000001E0,10124.800000000001E0,500.0E0)
DELETE FROM DB WHERE AL_ID=4
INSERT INTO DB VALUES(4,4,355.74000000000007E0,991.0916400000003E0,10313.599999999999E0,500.0E0)
DELETE FROM DB WHERE AL_ID=5
INSERT INTO DB VALUES(5,5,312.17999999999995E0,869.7334799999999E0,10745.6E0,500.0E0)
DELETE FROM DB WHERE AL_ID=6
INSERT INTO DB VALUES(6,6,304.9200000000001E0,849.5071200000003E0,11256.0E0,500.0E0)
DELETE FROM DB WHERE AL_ID=7
INSERT INTO DB VALUES(7,7,392.04E0,1092.2234400000002E0,10729.12E0,500.0E0)
DELETE FROM DB WHERE AL_ID=8
INSERT INTO DB VALUES(8,8,338.4E0,942.7824E0,10257.6E0,500.0E0)
DELETE FROM DB WHERE AL_ID=9
INSERT INTO DB VALUES(9,9,316.8E0,882.6048000000001E0,10380.800000000001E0,500.0E0)
DELETE FROM DB WHERE AL_ID=10
INSERT INTO DB VALUES(10,10,316.8E0,882.6048000000001E0,11022.4E0,500.0E0)
DELETE FROM DB WHERE AL_ID=11
INSERT INTO DB VALUES(11,11,309.6E0,862.5456E0,10875.199999999999E0,500.0E0)
DELETE FROM DB WHERE AL_ID=12
INSERT INTO DB VALUES(12,12,439.20000000000005E0,1223.6112000000003E0,10972.8E0,500.0E0)
DELETE FROM DB WHERE AL_ID=13
INSERT INTO DB VALUES(13,13,345.59999999999997E0,962.8416E0,10267.2E0,500.0E0)
DELETE FROM DB WHERE AL_ID=14
INSERT INTO DB VALUES(14,14,312.17999999999995E0,869.7334799999999E0,10776.0E0,500.0E0)
DELETE FROM DB WHERE AL_ID=15
INSERT INTO DB VALUES(15,15,377.52000000000004E0,1051.7707200000002E0,11155.2E0,500.0E0)
DELETE FROM DB WHERE AL_ID=16
INSERT INTO DB VALUES(16,16,363.0E0,1011.3180000000001E0,11606.400000000001E0,500.0E0)
DELETE FROM DB WHERE AL_ID=17
INSERT INTO DB VALUES(17,17,363.0E0,1011.3180000000001E0,11249.599999999999E0,500.0E0)
DELETE FROM DB WHERE AL_ID=18
INSERT INTO DB VALUES(18,18,417.24E0,1162.43064E0,10888.0E0,500.0E0)
DELETE FROM DB WHERE AL_ID=19
INSERT INTO DB VALUES(19,19,417.24E0,1162.43064E0,10785.6E0,500.0E0)
DELETE FROM DB WHERE AL_ID=20
INSERT INTO DB VALUES(20,20,417.24E0,1162.43064E0,10768.0E0,500.0E0)
DELETE FROM DB WHERE AL_ID=21
INSERT INTO DB VALUES(21,21,424.56000000000006E0,1182.8241600000003E0,10796.8E0,500.0E0)
DELETE FROM DB WHERE AL_ID=22
INSERT INTO DB VALUES(22,22,420.66E0,1171.95876E0,10849.6E0,500.0E0)
DELETE FROM DB WHERE AL_ID=23
INSERT INTO DB VALUES(23,23,405.90000000000003E0,1130.8374000000003E0,10704.0E0,500.0E0)
COMMIT
DISCONNECT
/*C13*/SET SCHEMA PUBLIC
DISCONNECT
/*C15*/SET SCHEMA PUBLIC
DISCONNECT
/*C14*/SET SCHEMA PUBLIC
DISCONNECT
/*C17*/SET SCHEMA PUBLIC
DISCONNECT
/*C18*/SET SCHEMA PUBLIC
DISCONNECT
/*C16*/SET SCHEMA PUBLIC
DISCONNECT
/*C20*/SET SCHEMA PUBLIC
DISCONNECT
/*C21*/SET SCHEMA PUBLIC
DISCONNECT
/*C19*/SET SCHEMA PUBLIC
DISCONNECT
/*C22*/SET SCHEMA PUBLIC
ALTER TABLE db ALTER COLUMN db_column RENAME TO data_center_load 
/*C23*/SET SCHEMA PUBLIC
DISCONNECT
/*C22*/DISCONNECT
/*C25*/SET SCHEMA PUBLIC
DISCONNECT
/*C24*/SET SCHEMA PUBLIC
DISCONNECT
/*C27*/SET SCHEMA PUBLIC
DISCONNECT
/*C26*/SET SCHEMA PUBLIC
DISCONNECT
/*C29*/SET SCHEMA PUBLIC
DISCONNECT
/*C28*/SET SCHEMA PUBLIC
DISCONNECT
/*C31*/SET SCHEMA PUBLIC
DISCONNECT
/*C30*/SET SCHEMA PUBLIC
DISCONNECT
/*C33*/SET SCHEMA PUBLIC
DISCONNECT
/*C32*/SET SCHEMA PUBLIC
DISCONNECT
/*C35*/SET SCHEMA PUBLIC
DISCONNECT
/*C34*/SET SCHEMA PUBLIC
DISCONNECT
/*C37*/SET SCHEMA PUBLIC
DISCONNECT
/*C36*/SET SCHEMA PUBLIC
DISCONNECT
/*C39*/SET SCHEMA PUBLIC
DISCONNECT
/*C38*/SET SCHEMA PUBLIC
DISCONNECT
/*C40*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=0
INSERT INTO DB VALUES(0,0,380.64000000000004E0,1060.46304E0,10368.0E0,400.0E0)
COMMIT
DISCONNECT
/*C41*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=2
INSERT INTO DB VALUES(2,2,304.9200000000001E0,849.5071200000003E0,10166.4E0,300.0E0)
COMMIT
DISCONNECT
/*C42*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=4
INSERT INTO DB VALUES(4,4,355.74000000000007E0,991.0916400000003E0,10313.599999999999E0,550.0E0)
COMMIT
DISCONNECT
/*C44*/SET SCHEMA PUBLIC
DISCONNECT
/*C43*/SET SCHEMA PUBLIC
DISCONNECT
/*C46*/SET SCHEMA PUBLIC
DISCONNECT
/*C45*/SET SCHEMA PUBLIC
DISCONNECT
/*C47*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=0
INSERT INTO DB VALUES(0,0,380.64000000000004E0,1060.46304E0,10368.0E0,500.0E0)
COMMIT
DISCONNECT
/*C48*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=2
INSERT INTO DB VALUES(2,2,304.9200000000001E0,849.5071200000003E0,10166.4E0,500.0E0)
COMMIT
DISCONNECT
/*C49*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=4
INSERT INTO DB VALUES(4,4,355.74000000000007E0,991.0916400000003E0,10313.599999999999E0,500.0E0)
COMMIT
DISCONNECT
/*C51*/SET SCHEMA PUBLIC
DISCONNECT
/*C50*/SET SCHEMA PUBLIC
DISCONNECT
/*C53*/SET SCHEMA PUBLIC
DISCONNECT
/*C52*/SET SCHEMA PUBLIC
DISCONNECT
/*C55*/SET SCHEMA PUBLIC
DISCONNECT
/*C54*/SET SCHEMA PUBLIC
DISCONNECT
/*C57*/SET SCHEMA PUBLIC
DISCONNECT
/*C56*/SET SCHEMA PUBLIC
DISCONNECT
/*C59*/SET SCHEMA PUBLIC
DISCONNECT
/*C60*/SET SCHEMA PUBLIC
DISCONNECT
/*C58*/SET SCHEMA PUBLIC
DISCONNECT
/*C62*/SET SCHEMA PUBLIC
DISCONNECT
/*C61*/SET SCHEMA PUBLIC
DISCONNECT
/*C64*/SET SCHEMA PUBLIC
DISCONNECT
/*C63*/SET SCHEMA PUBLIC
DISCONNECT
/*C66*/SET SCHEMA PUBLIC
DISCONNECT
/*C65*/SET SCHEMA PUBLIC
DISCONNECT
/*C68*/SET SCHEMA PUBLIC
DISCONNECT
/*C67*/SET SCHEMA PUBLIC
DISCONNECT
/*C70*/SET SCHEMA PUBLIC
DISCONNECT
/*C69*/SET SCHEMA PUBLIC
DISCONNECT
/*C72*/SET SCHEMA PUBLIC
DISCONNECT
/*C71*/SET SCHEMA PUBLIC
DISCONNECT
/*C74*/SET SCHEMA PUBLIC
DISCONNECT
/*C73*/SET SCHEMA PUBLIC
DISCONNECT
/*C75*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=0
INSERT INTO DB VALUES(0,0,380.64000000000004E0,1060.46304E0,10368.0E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=1
INSERT INTO DB VALUES(1,1,377.52000000000004E0,1051.7707200000002E0,10259.2E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=2
INSERT INTO DB VALUES(2,2,304.9200000000001E0,849.5071200000003E0,10166.4E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=3
INSERT INTO DB VALUES(3,3,363.0E0,1011.3180000000001E0,10124.800000000001E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=4
INSERT INTO DB VALUES(4,4,355.74000000000007E0,991.0916400000003E0,10313.599999999999E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=5
INSERT INTO DB VALUES(5,5,312.17999999999995E0,869.7334799999999E0,10745.6E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=6
INSERT INTO DB VALUES(6,6,304.9200000000001E0,849.5071200000003E0,11256.0E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=7
INSERT INTO DB VALUES(7,7,392.04E0,1092.2234400000002E0,10729.12E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=8
INSERT INTO DB VALUES(8,8,338.4E0,942.7824E0,10257.6E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=9
INSERT INTO DB VALUES(9,9,316.8E0,882.6048000000001E0,10380.800000000001E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=10
INSERT INTO DB VALUES(10,10,316.8E0,882.6048000000001E0,11022.4E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=11
INSERT INTO DB VALUES(11,11,309.6E0,862.5456E0,10875.199999999999E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=12
INSERT INTO DB VALUES(12,12,439.20000000000005E0,1223.6112000000003E0,10972.8E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=13
INSERT INTO DB VALUES(13,13,345.59999999999997E0,962.8416E0,10267.2E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=14
INSERT INTO DB VALUES(14,14,312.17999999999995E0,869.7334799999999E0,10776.0E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=15
INSERT INTO DB VALUES(15,15,377.52000000000004E0,1051.7707200000002E0,11155.2E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=16
INSERT INTO DB VALUES(16,16,363.0E0,1011.3180000000001E0,11606.400000000001E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=17
INSERT INTO DB VALUES(17,17,363.0E0,1011.3180000000001E0,11249.599999999999E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=18
INSERT INTO DB VALUES(18,18,417.24E0,1162.43064E0,10888.0E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=19
INSERT INTO DB VALUES(19,19,417.24E0,1162.43064E0,10785.6E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=20
INSERT INTO DB VALUES(20,20,417.24E0,1162.43064E0,10768.0E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=21
INSERT INTO DB VALUES(21,21,424.56000000000006E0,1182.8241600000003E0,10796.8E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=22
INSERT INTO DB VALUES(22,22,420.66E0,1171.95876E0,10849.6E0,5000.0E0)
DELETE FROM DB WHERE AL_ID=23
INSERT INTO DB VALUES(23,23,405.90000000000003E0,1130.8374000000003E0,10704.0E0,5000.0E0)
COMMIT
DISCONNECT
/*C76*/SET SCHEMA PUBLIC
DISCONNECT
/*C78*/SET SCHEMA PUBLIC
DISCONNECT
/*C77*/SET SCHEMA PUBLIC
DISCONNECT
/*C80*/SET SCHEMA PUBLIC
DISCONNECT
/*C79*/SET SCHEMA PUBLIC
DISCONNECT
/*C81*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=0
INSERT INTO DB VALUES(0,0,380.64000000000004E0,1060.46304E0,10368.0E0,500.0E0)
DELETE FROM DB WHERE AL_ID=1
INSERT INTO DB VALUES(1,1,377.52000000000004E0,1051.7707200000002E0,10259.2E0,500.0E0)
DELETE FROM DB WHERE AL_ID=2
INSERT INTO DB VALUES(2,2,304.9200000000001E0,849.5071200000003E0,10166.4E0,500.0E0)
DELETE FROM DB WHERE AL_ID=3
INSERT INTO DB VALUES(3,3,363.0E0,1011.3180000000001E0,10124.800000000001E0,500.0E0)
DELETE FROM DB WHERE AL_ID=4
INSERT INTO DB VALUES(4,4,355.74000000000007E0,991.0916400000003E0,10313.599999999999E0,500.0E0)
DELETE FROM DB WHERE AL_ID=5
INSERT INTO DB VALUES(5,5,312.17999999999995E0,869.7334799999999E0,10745.6E0,500.0E0)
DELETE FROM DB WHERE AL_ID=6
INSERT INTO DB VALUES(6,6,304.9200000000001E0,849.5071200000003E0,11256.0E0,500.0E0)
DELETE FROM DB WHERE AL_ID=7
INSERT INTO DB VALUES(7,7,392.04E0,1092.2234400000002E0,10729.12E0,500.0E0)
DELETE FROM DB WHERE AL_ID=8
INSERT INTO DB VALUES(8,8,338.4E0,942.7824E0,10257.6E0,500.0E0)
DELETE FROM DB WHERE AL_ID=9
INSERT INTO DB VALUES(9,9,316.8E0,882.6048000000001E0,10380.800000000001E0,500.0E0)
DELETE FROM DB WHERE AL_ID=10
INSERT INTO DB VALUES(10,10,316.8E0,882.6048000000001E0,11022.4E0,500.0E0)
DELETE FROM DB WHERE AL_ID=11
INSERT INTO DB VALUES(11,11,309.6E0,862.5456E0,10875.199999999999E0,500.0E0)
DELETE FROM DB WHERE AL_ID=12
INSERT INTO DB VALUES(12,12,439.20000000000005E0,1223.6112000000003E0,10972.8E0,500.0E0)
DELETE FROM DB WHERE AL_ID=13
INSERT INTO DB VALUES(13,13,345.59999999999997E0,962.8416E0,10267.2E0,500.0E0)
DELETE FROM DB WHERE AL_ID=14
INSERT INTO DB VALUES(14,14,312.17999999999995E0,869.7334799999999E0,10776.0E0,500.0E0)
DELETE FROM DB WHERE AL_ID=15
INSERT INTO DB VALUES(15,15,377.52000000000004E0,1051.7707200000002E0,11155.2E0,500.0E0)
DELETE FROM DB WHERE AL_ID=16
INSERT INTO DB VALUES(16,16,363.0E0,1011.3180000000001E0,11606.400000000001E0,500.0E0)
DELETE FROM DB WHERE AL_ID=17
INSERT INTO DB VALUES(17,17,363.0E0,1011.3180000000001E0,11249.599999999999E0,500.0E0)
DELETE FROM DB WHERE AL_ID=18
INSERT INTO DB VALUES(18,18,417.24E0,1162.43064E0,10888.0E0,500.0E0)
DELETE FROM DB WHERE AL_ID=19
INSERT INTO DB VALUES(19,19,417.24E0,1162.43064E0,10785.6E0,500.0E0)
DELETE FROM DB WHERE AL_ID=20
INSERT INTO DB VALUES(20,20,417.24E0,1162.43064E0,10768.0E0,500.0E0)
DELETE FROM DB WHERE AL_ID=21
INSERT INTO DB VALUES(21,21,424.56000000000006E0,1182.8241600000003E0,10796.8E0,500.0E0)
DELETE FROM DB WHERE AL_ID=22
INSERT INTO DB VALUES(22,22,420.66E0,1171.95876E0,10849.6E0,500.0E0)
DELETE FROM DB WHERE AL_ID=23
INSERT INTO DB VALUES(23,23,405.90000000000003E0,1130.8374000000003E0,10704.0E0,500.0E0)
COMMIT
DISCONNECT
/*C82*/SET SCHEMA PUBLIC
DISCONNECT
/*C84*/SET SCHEMA PUBLIC
DISCONNECT
/*C83*/SET SCHEMA PUBLIC
DISCONNECT
/*C86*/SET SCHEMA PUBLIC
DISCONNECT
/*C87*/SET SCHEMA PUBLIC
DISCONNECT
/*C88*/SET SCHEMA PUBLIC
DISCONNECT
/*C85*/SET SCHEMA PUBLIC
DISCONNECT
/*C90*/SET SCHEMA PUBLIC
DISCONNECT
/*C89*/SET SCHEMA PUBLIC
DISCONNECT
/*C92*/SET SCHEMA PUBLIC
DISCONNECT
/*C91*/SET SCHEMA PUBLIC
DISCONNECT
/*C94*/SET SCHEMA PUBLIC
DISCONNECT
/*C93*/SET SCHEMA PUBLIC
DISCONNECT
/*C96*/SET SCHEMA PUBLIC
DISCONNECT
/*C95*/SET SCHEMA PUBLIC
DISCONNECT
/*C98*/SET SCHEMA PUBLIC
DISCONNECT
/*C97*/SET SCHEMA PUBLIC
DISCONNECT
/*C100*/SET SCHEMA PUBLIC
DISCONNECT
/*C99*/SET SCHEMA PUBLIC
DISCONNECT
/*C102*/SET SCHEMA PUBLIC
DISCONNECT
/*C101*/SET SCHEMA PUBLIC
DISCONNECT
/*C103*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=1
INSERT INTO DB VALUES(1,1,377.52000000000004E0,1051.7707200000002E0,10259.2E0,300.0E0)
COMMIT
DISCONNECT
/*C104*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=2
INSERT INTO DB VALUES(2,2,304.9200000000001E0,849.5071200000003E0,10166.4E0,400.0E0)
COMMIT
DISCONNECT
/*C106*/SET SCHEMA PUBLIC
DISCONNECT
/*C105*/SET SCHEMA PUBLIC
DISCONNECT
/*C108*/SET SCHEMA PUBLIC
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,380.64000000000004E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,500.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C107*/SET SCHEMA PUBLIC
DISCONNECT
/*C110*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,23.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,24.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,25.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,26.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,27.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,28.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,29.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,30.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,31.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,32.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,33.0E0,942.7824E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,23.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,24.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,25.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,26.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,27.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,28.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,29.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,30.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,31.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,32.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,33.0E0,338.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,23.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,24.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,25.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,26.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,27.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,28.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,29.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,30.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,31.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,32.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,33.0E0,500.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10466.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10466.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,19.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,20.0E0,9605.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,21,21.0E0,9605.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,22,22.0E0,10166.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,23,23.0E0,10166.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,24,24.0E0,9737.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,25,25.0E0,9737.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,26,26.0E0,9414.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,27,27.0E0,9414.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,28,28.0E0,9802.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,29,29.0E0,9802.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,30,30.0E0,10886.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,31,31.0E0,10886.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,32,32.0E0,9665.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,33,33.0E0,9665.37656E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,21,21.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,22,22.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,23,23.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,24,24.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,25,25.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,26,26.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,27,27.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,28,28.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,29,29.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,30,30.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,31,31.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,32,32.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,33,33.0E0,10257.6E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,19.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,20.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,21,21.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,22,22.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,23,23.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,24,24.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,25,25.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,26,26.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,27,27.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,28,28.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,29,29.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,30,30.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,31,31.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,32,32.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,33,33.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C109*/SET SCHEMA PUBLIC
DISCONNECT
/*C111*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=1
INSERT INTO DB VALUES(1,1,377.52000000000004E0,1051.7707200000002E0,10259.2E0,500.0E0)
COMMIT
DISCONNECT
/*C112*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=2
INSERT INTO DB VALUES(2,2,304.9200000000001E0,849.5071200000003E0,10166.4E0,500.0E0)
COMMIT
DISCONNECT
/*C113*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=0
INSERT INTO DB VALUES(0,0,380.64000000000004E0,1060.46304E0,10368.0E0,1.0E0)
DELETE FROM DB WHERE AL_ID=1
INSERT INTO DB VALUES(1,1,377.52000000000004E0,1051.7707200000002E0,10259.2E0,1.0E0)
DELETE FROM DB WHERE AL_ID=2
INSERT INTO DB VALUES(2,2,304.9200000000001E0,849.5071200000003E0,10166.4E0,0.8E0)
DELETE FROM DB WHERE AL_ID=3
INSERT INTO DB VALUES(3,3,363.0E0,1011.3180000000001E0,10124.800000000001E0,0.8E0)
DELETE FROM DB WHERE AL_ID=4
INSERT INTO DB VALUES(4,4,355.74000000000007E0,991.0916400000003E0,10313.599999999999E0,1.2E0)
DELETE FROM DB WHERE AL_ID=5
INSERT INTO DB VALUES(5,5,312.17999999999995E0,869.7334799999999E0,10745.6E0,1.2E0)
DELETE FROM DB WHERE AL_ID=6
INSERT INTO DB VALUES(6,6,304.9200000000001E0,849.5071200000003E0,11256.0E0,1.0E0)
DELETE FROM DB WHERE AL_ID=7
INSERT INTO DB VALUES(7,7,392.04E0,1092.2234400000002E0,10729.12E0,1.0E0)
DELETE FROM DB WHERE AL_ID=8
INSERT INTO DB VALUES(8,8,338.4E0,942.7824E0,10257.6E0,0.8E0)
DELETE FROM DB WHERE AL_ID=9
INSERT INTO DB VALUES(9,9,316.8E0,882.6048000000001E0,10380.800000000001E0,0.8E0)
DELETE FROM DB WHERE AL_ID=10
INSERT INTO DB VALUES(10,10,316.8E0,882.6048000000001E0,11022.4E0,1.2E0)
DELETE FROM DB WHERE AL_ID=11
INSERT INTO DB VALUES(11,11,309.6E0,862.5456E0,10875.199999999999E0,1.2E0)
DELETE FROM DB WHERE AL_ID=12
INSERT INTO DB VALUES(12,12,439.20000000000005E0,1223.6112000000003E0,10972.8E0,1.0E0)
DELETE FROM DB WHERE AL_ID=13
INSERT INTO DB VALUES(13,13,345.59999999999997E0,962.8416E0,10267.2E0,1.0E0)
DELETE FROM DB WHERE AL_ID=14
INSERT INTO DB VALUES(14,14,312.17999999999995E0,869.7334799999999E0,10776.0E0,0.8E0)
DELETE FROM DB WHERE AL_ID=15
INSERT INTO DB VALUES(15,15,377.52000000000004E0,1051.7707200000002E0,11155.2E0,0.8E0)
DELETE FROM DB WHERE AL_ID=16
INSERT INTO DB VALUES(16,16,363.0E0,1011.3180000000001E0,11606.400000000001E0,1.2E0)
DELETE FROM DB WHERE AL_ID=17
INSERT INTO DB VALUES(17,17,363.0E0,1011.3180000000001E0,11249.599999999999E0,1.2E0)
DELETE FROM DB WHERE AL_ID=18
INSERT INTO DB VALUES(18,18,417.24E0,1162.43064E0,10888.0E0,1.0E0)
DELETE FROM DB WHERE AL_ID=19
INSERT INTO DB VALUES(19,19,417.24E0,1162.43064E0,10785.6E0,1.0E0)
DELETE FROM DB WHERE AL_ID=20
INSERT INTO DB VALUES(20,20,417.24E0,1162.43064E0,10768.0E0,0.8E0)
DELETE FROM DB WHERE AL_ID=21
INSERT INTO DB VALUES(21,21,424.56000000000006E0,1182.8241600000003E0,10796.8E0,0.8E0)
DELETE FROM DB WHERE AL_ID=22
INSERT INTO DB VALUES(22,22,420.66E0,1171.95876E0,10849.6E0,1.2E0)
DELETE FROM DB WHERE AL_ID=23
INSERT INTO DB VALUES(23,23,405.90000000000003E0,1130.8374000000003E0,10704.0E0,1.2E0)
COMMIT
DISCONNECT
/*C114*/SET SCHEMA PUBLIC
DISCONNECT
/*C116*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,1.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,1.2E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C117*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C115*/SET SCHEMA PUBLIC
DISCONNECT
/*C119*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,1.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,1.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,0.8E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C120*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C118*/SET SCHEMA PUBLIC
DISCONNECT
/*C122*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C121*/SET SCHEMA PUBLIC
DISCONNECT
/*C124*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1162.43064E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,417.24E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,1.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,1.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,1.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,1.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,1.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,1.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,1.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,10777.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,10777.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11607.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11607.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,10889.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,19.0E0,10889.2E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,19.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C123*/SET SCHEMA PUBLIC
DISCONNECT
/*C126*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,0.8E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C125*/SET SCHEMA PUBLIC
DISCONNECT
/*C128*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,1.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,0.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,1.2E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,1.2E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10314.399999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10314.399999999998E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C127*/SET SCHEMA PUBLIC
DISCONNECT
/*C130*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,600.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,600.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,446.50837671341793E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,446.50837671341793E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,372.0903139278483E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,372.0903139278483E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,297.67225114227864E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10666.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10666.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10713.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10713.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11856.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11856.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10757.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10757.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11422.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11422.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,11419.308376713418E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,11419.308376713418E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,11148.090313927849E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C129*/SET SCHEMA PUBLIC
DISCONNECT
/*C132*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,400.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C131*/SET SCHEMA PUBLIC
DISCONNECT
/*C134*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,1162.43064E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,417.24E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,600.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,600.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,600.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,600.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,258.4729568648178E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,258.4729568648178E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,387.7094352972266E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,387.7094352972266E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,323.0911960810222E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,323.0911960810222E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,211.91804585306386E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10666.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10666.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10713.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10713.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11856.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11856.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10757.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10757.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11422.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11422.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,11572.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,11572.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,11276.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,11276.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11864.87295686482E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11864.87295686482E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,11275.709435297227E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,19.0E0,11275.709435297227E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,20.0E0,11091.091196081023E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,19.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,20.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C133*/SET SCHEMA PUBLIC
DISCONNECT
/*C136*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,316.8E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,300.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,300.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,300.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11556.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11556.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11222.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C135*/SET SCHEMA PUBLIC
DISCONNECT
/*C137*/SET SCHEMA PUBLIC
DELETE FROM DB WHERE AL_ID=0
INSERT INTO DB VALUES(0,0,380.64000000000004E0,1060.46304E0,10368.0E0,1.0E0)
DELETE FROM DB WHERE AL_ID=1
INSERT INTO DB VALUES(1,1,377.52000000000004E0,1051.7707200000002E0,10259.2E0,1.0E0)
DELETE FROM DB WHERE AL_ID=2
INSERT INTO DB VALUES(2,2,304.9200000000001E0,849.5071200000003E0,10166.4E0,0.8E0)
DELETE FROM DB WHERE AL_ID=3
INSERT INTO DB VALUES(3,3,363.0E0,1011.3180000000001E0,10124.800000000001E0,0.8E0)
DELETE FROM DB WHERE AL_ID=4
INSERT INTO DB VALUES(4,4,355.74000000000007E0,991.0916400000003E0,10313.599999999999E0,0.8E0)
DELETE FROM DB WHERE AL_ID=5
INSERT INTO DB VALUES(5,5,312.17999999999995E0,869.7334799999999E0,10745.6E0,1.0E0)
DELETE FROM DB WHERE AL_ID=6
INSERT INTO DB VALUES(6,6,304.9200000000001E0,849.5071200000003E0,11256.0E0,1.0E0)
DELETE FROM DB WHERE AL_ID=7
INSERT INTO DB VALUES(7,7,392.04E0,1092.2234400000002E0,10729.12E0,1.0E0)
DELETE FROM DB WHERE AL_ID=8
INSERT INTO DB VALUES(8,8,338.4E0,942.7824E0,10257.6E0,0.8E0)
DELETE FROM DB WHERE AL_ID=9
INSERT INTO DB VALUES(9,9,316.8E0,882.6048000000001E0,10380.800000000001E0,0.8E0)
DELETE FROM DB WHERE AL_ID=10
INSERT INTO DB VALUES(10,10,316.8E0,882.6048000000001E0,11022.4E0,0.8E0)
DELETE FROM DB WHERE AL_ID=11
INSERT INTO DB VALUES(11,11,309.6E0,862.5456E0,10875.199999999999E0,1.0E0)
DELETE FROM DB WHERE AL_ID=12
INSERT INTO DB VALUES(12,12,439.20000000000005E0,1223.6112000000003E0,10972.8E0,1.0E0)
DELETE FROM DB WHERE AL_ID=13
INSERT INTO DB VALUES(13,13,345.59999999999997E0,962.8416E0,10267.2E0,1.0E0)
DELETE FROM DB WHERE AL_ID=14
INSERT INTO DB VALUES(14,14,312.17999999999995E0,869.7334799999999E0,10776.0E0,0.8E0)
DELETE FROM DB WHERE AL_ID=15
INSERT INTO DB VALUES(15,15,377.52000000000004E0,1051.7707200000002E0,11155.2E0,0.8E0)
DELETE FROM DB WHERE AL_ID=16
INSERT INTO DB VALUES(16,16,363.0E0,1011.3180000000001E0,11606.400000000001E0,0.8E0)
DELETE FROM DB WHERE AL_ID=17
INSERT INTO DB VALUES(17,17,363.0E0,1011.3180000000001E0,11249.599999999999E0,1.0E0)
DELETE FROM DB WHERE AL_ID=18
INSERT INTO DB VALUES(18,18,417.24E0,1162.43064E0,10888.0E0,1.0E0)
DELETE FROM DB WHERE AL_ID=19
INSERT INTO DB VALUES(19,19,417.24E0,1162.43064E0,10785.6E0,1.0E0)
DELETE FROM DB WHERE AL_ID=20
INSERT INTO DB VALUES(20,20,417.24E0,1162.43064E0,10768.0E0,0.8E0)
DELETE FROM DB WHERE AL_ID=21
INSERT INTO DB VALUES(21,21,424.56000000000006E0,1182.8241600000003E0,10796.8E0,0.8E0)
DELETE FROM DB WHERE AL_ID=22
INSERT INTO DB VALUES(22,22,420.66E0,1171.95876E0,10849.6E0,0.8E0)
DELETE FROM DB WHERE AL_ID=23
INSERT INTO DB VALUES(23,23,405.90000000000003E0,1130.8374000000003E0,10704.0E0,1.0E0)
COMMIT
DISCONNECT
/*C138*/SET SCHEMA PUBLIC
DISCONNECT
/*C140*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,316.8E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C139*/SET SCHEMA PUBLIC
DISCONNECT
/*C142*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,23.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,24.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,25.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,26.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,27.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,28.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,29.0E0,991.0916400000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,23.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,24.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,25.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,26.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,27.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,28.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,29.0E0,355.74000000000007E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,285.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,285.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,285.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,285.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,462.5E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,462.5E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,370.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,370.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,370.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,23.0E0,370.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,24.0E0,462.5E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,25.0E0,462.5E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,26.0E0,370.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,27.0E0,370.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,28.0E0,370.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,29.0E0,370.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11222.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11222.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,11222.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,11222.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,11132.25E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,11132.25E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11891.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11891.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,11244.25E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,19.0E0,11244.25E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,20.0E0,11230.5E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,21,21.0E0,11230.5E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,22,22.0E0,11219.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,23,23.0E0,11219.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,24,24.0E0,9699.6626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,25,25.0E0,9699.6626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,26,26.0E0,9577.12928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,27,27.0E0,9577.12928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,28,28.0E0,9672.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,29,29.0E0,9672.282E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,21,21.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,22,22.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,23,23.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,24,24.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,25,25.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,26,26.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,27,27.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,28,28.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,29,29.0E0,10313.599999999999E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,19.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,20.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,21,21.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,22,22.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,23,23.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,24,24.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,25,25.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,26,26.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,27,27.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,28,28.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,29,29.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C141*/SET SCHEMA PUBLIC
DISCONNECT
/*C144*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,331.25E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,331.25E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,265.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11587.25E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11587.25E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10588.85E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,105.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,105.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C143*/SET SCHEMA PUBLIC
DISCONNECT
/*C146*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,260.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,260.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,260.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,260.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,325.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,325.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11282.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11282.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,11297.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,11297.8E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,3110400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,3110400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,3124920.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,3124920.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,3154079.9999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,3154079.9999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,3451800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,3451800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,3152280.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,3152280.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,3384720.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,3384720.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,3389340.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,3389340.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C145*/SET SCHEMA PUBLIC
DISCONNECT
/*C148*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,1171.95876E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,420.66E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,21,21.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,22,22.0E0,10849.6E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,21,21.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,22,22.0E0,10849.6E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,3110400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,3110400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,3049920.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,3049920.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,3094079.9999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,3094079.9999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,3376800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,3376800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,3077280.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,3077280.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,3306720.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,3306720.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,3291840.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,3291840.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,3232800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,3232800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,3481920.0000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,3481920.0000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,3266400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,19.0E0,3266400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,20.0E0,3230400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,21,21.0E0,3230400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,22,22.0E0,3254880.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C147*/SET SCHEMA PUBLIC
DISCONNECT
/*C150*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,3110400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,3110400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,3049920.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,3049920.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,3094079.9999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,3094079.9999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,3376800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,3376800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,3077280.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,3077280.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C149*/SET SCHEMA PUBLIC
DISCONNECT
/*C152*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,417.24E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,250.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,3110400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,3110400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,3049920.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,3049920.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,3094079.9999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,3094079.9999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,3376800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,3376800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,3077280.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,3077280.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,3306720.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,3306720.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,3291840.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,3291840.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,3232800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,3232800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,3481920.0000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,3481920.0000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,3266400.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C151*/SET SCHEMA PUBLIC
DISCONNECT
/*C154*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,23.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,24.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,25.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,26.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,27.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,28.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,29.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,30.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,31.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,32.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,33.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,34.0E0,882.6048000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,23.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,24.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,25.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,26.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,27.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,28.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,29.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,30.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,31.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,32.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,33.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,34.0E0,316.8E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,23.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,24.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,25.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,26.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,27.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,28.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,29.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,30.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,31.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,32.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,33.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,34.0E0,400.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11222.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11222.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,11222.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,11222.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,11026.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,11026.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11806.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11806.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,10126.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,19.0E0,10126.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,20.0E0,9855.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,21,21.0E0,9855.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,22,22.0E0,9866.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,23,23.0E0,9866.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,24,24.0E0,9487.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,25,25.0E0,9487.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,26,26.0E0,9364.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,27,27.0E0,9364.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,28,28.0E0,9702.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,29,29.0E0,9702.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,30,30.0E0,10886.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,31,31.0E0,10886.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,32,32.0E0,9665.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,33,33.0E0,9665.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,34,34.0E0,10539.7952E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,21,21.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,22,22.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,23,23.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,24,24.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,25,25.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,26,26.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,27,27.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,28,28.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,29,29.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,30,30.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,31,31.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,32,32.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,33,33.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,34,34.0E0,11022.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,228395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,19.0E0,228395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,20.0E0,273729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,21,21.0E0,273729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,22,22.0E0,294847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,23,23.0E0,294847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,24,24.0E0,264251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,25,25.0E0,264251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,26,26.0E0,240531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,27,27.0E0,240531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,28,28.0E0,183395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,29,29.0E0,183395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,30,30.0E0,110920.04399999969E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,31,31.0E0,110920.04399999969E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,32,32.0E0,177667.03199999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,33,33.0E0,177667.03199999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,34,34.0E0,144781.43999999974E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C153*/SET SCHEMA PUBLIC
DISCONNECT
/*C156*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,23.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,24.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,25.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,26.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,27.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,28.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,29.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,30.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,31.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,32.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,33.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,34.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,35.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,36.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,37.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,38.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,39.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,40.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,41.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,42.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,43.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,44.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,45.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,46.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,47.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,48.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,49.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,50.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,51.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,52.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,53.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,54.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,55.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,56.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,57.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,58.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,59.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,60.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,61.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,62.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,63.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,64.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,65.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,66.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,67.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,68.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,69.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,70.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,71.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,72.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,73.0E0,1060.46304E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,23.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,24.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,25.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,26.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,27.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,28.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,29.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,30.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,31.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,32.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,33.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,34.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,35.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,36.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,37.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,38.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,39.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,40.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,41.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,42.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,43.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,44.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,45.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,46.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,47.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,48.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,49.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,50.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,51.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,52.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,53.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,54.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,55.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,56.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,57.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,58.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,59.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,60.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,61.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,62.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,63.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,64.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,65.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,66.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,67.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,68.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,69.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,70.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,71.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,72.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,73.0E0,380.64000000000004E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,23.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,24.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,25.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,26.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,27.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,28.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,29.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,30.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,31.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,32.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,33.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,34.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,35.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,36.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,37.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,38.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,39.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,40.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,41.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,42.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,43.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,44.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,45.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,46.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,47.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,48.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,49.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,50.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,51.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,52.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,53.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,54.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,55.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,56.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,57.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,58.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,59.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,60.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,61.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,62.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,63.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,64.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,65.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,66.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,67.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,68.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,69.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,70.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,71.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,72.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,73.0E0,250.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11222.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11222.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,11222.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,11222.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,11026.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,11026.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11806.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11806.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,11138.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,19.0E0,11138.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,20.0E0,11018.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,21,21.0E0,11018.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,22,22.0E0,11049.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,23,23.0E0,11049.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,24,24.0E0,10618.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,25,25.0E0,10618.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,26,26.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,27,27.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,28,28.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,29,29.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,30,30.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,31,31.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,32,32.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,33,33.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,34,34.0E0,11222.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,35,35.0E0,11222.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,36,36.0E0,11222.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,37,37.0E0,11222.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,38,38.0E0,11026.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,39,39.0E0,11026.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,40,40.0E0,11806.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,41,41.0E0,11806.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,42,42.0E0,11138.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,43,43.0E0,11138.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,44,44.0E0,11018.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,45,45.0E0,11018.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,46,46.0E0,11049.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,47,47.0E0,11049.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,48,48.0E0,10618.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,49,49.0E0,10618.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,50,50.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,51,51.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,52,52.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,53,53.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,54,54.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,55,55.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,56,56.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,57,57.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,58,58.0E0,11222.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,59,59.0E0,11222.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,60,60.0E0,11222.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,61,61.0E0,11222.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,62,62.0E0,11026.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,63,63.0E0,11026.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,64,64.0E0,11806.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,65,65.0E0,11806.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,66,66.0E0,11138.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,67,67.0E0,11138.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,68,68.0E0,11018.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,69,69.0E0,11018.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,70,70.0E0,11049.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,71,71.0E0,11049.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,72,72.0E0,10618.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,73,73.0E0,10618.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,21,21.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,22,22.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,23,23.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,24,24.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,25,25.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,26,26.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,27,27.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,28,28.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,29,29.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,30,30.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,31,31.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,32,32.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,33,33.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,34,34.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,35,35.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,36,36.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,37,37.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,38,38.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,39,39.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,40,40.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,41,41.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,42,42.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,43,43.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,44,44.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,45,45.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,46,46.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,47,47.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,48,48.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,49,49.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,50,50.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,51,51.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,52,52.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,53,53.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,54,54.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,55,55.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,56,56.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,57,57.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,58,58.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,59,59.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,60,60.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,61,61.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,62,62.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,63,63.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,64,64.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,65,65.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,66,66.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,67,67.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,68,68.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,69,69.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,70,70.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,71,71.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,72,72.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,73,73.0E0,10368.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,-57920.15881075211E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,19.0E0,-57920.15881075211E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,20.0E0,-57920.15881075211E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,21,21.0E0,-57920.15881075211E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,22,22.0E0,-46336.12704860169E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,23,23.0E0,-46336.12704860169E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,24,24.0E0,-57920.15881075211E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,25,25.0E0,-57920.15881075211E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,26,26.0E0,-57920.15881075211E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,27,27.0E0,-57920.15881075211E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,28,28.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,29,29.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,30,30.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,31,31.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,32,32.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,33,33.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,34,34.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,35,35.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,36,36.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,37,37.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,38,38.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,39,39.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,40,40.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,41,41.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,42,42.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,43,43.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,44,44.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,45,45.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,46,46.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,47,47.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,48,48.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,49,49.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,50,50.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,51,51.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,52,52.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,53,53.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,54,54.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,55,55.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,56,56.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,57,57.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,58,58.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,59,59.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,60,60.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,61,61.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,62,62.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,63,63.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,64,64.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,65,65.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,66,66.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,67,67.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,68,68.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,69,69.0E0,-100000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,70,70.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,71,71.0E0,-80000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,72,72.0E0,-75378.25974146365E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,73,73.0E0,-75378.25974146365E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C155*/SET SCHEMA PUBLIC
DISCONNECT
/*C158*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,250.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,0.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C157*/SET SCHEMA PUBLIC
DISCONNECT
/*C160*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,250.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,0.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C159*/SET SCHEMA PUBLIC
DISCONNECT
/*C162*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,250.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,0.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C163*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,139.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,140.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,141.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,142.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,143.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,144.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,145.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,146.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,147.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,148.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,149.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,150.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,151.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,152.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,153.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,154.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,155.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,156.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,157.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,158.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,159.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,160.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,161.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,162.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,163.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,164.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,165.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,166.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,167.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,168.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,169.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,170.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,171.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,172.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,173.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,174.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,175.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,176.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,177.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,178.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,179.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,180.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,181.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,182.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,183.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,184.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,185.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,186.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,187.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,188.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,189.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,190.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,191.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,192.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,193.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,194.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,195.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,196.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,197.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,198.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,199.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,200.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,201.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,202.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,203.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,204.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,205.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,206.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,207.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,208.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,209.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,210.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,211.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,212.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,213.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,214.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,215.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,216.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,217.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,218.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,219.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,220.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,221.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,222.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,223.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,224.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,225.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,226.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,227.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,228.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,229.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,230.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,231.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,232.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,233.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,234.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,235.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,236.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,237.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,238.0E0,1171.95876E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,2,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,139.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,140.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,141.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,142.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,143.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,144.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,145.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,146.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,147.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,148.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,149.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,150.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,151.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,152.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,153.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,154.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,155.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,156.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,157.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,158.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,159.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,160.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,161.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,162.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,163.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,164.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,165.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,166.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,167.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,168.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,169.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,170.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,171.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,172.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,173.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,174.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,175.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,176.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,177.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,178.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,179.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,180.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,181.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,182.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,183.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,184.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,185.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,186.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,187.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,188.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,189.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,190.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,191.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,192.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,193.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,194.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,195.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,196.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,197.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,198.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,199.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,200.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,201.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,202.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,203.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,204.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,205.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,206.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,207.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,208.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,209.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,210.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,211.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,212.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,213.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,214.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,215.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,216.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,217.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,218.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,219.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,220.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,221.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,222.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,223.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,224.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,225.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,226.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,227.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,228.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,229.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,230.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,231.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,232.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,233.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,234.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,235.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,236.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,237.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,238.0E0,420.66E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,139.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,140.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,141.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,142.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,143.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,144.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,145.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,146.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,147.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,148.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,149.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,150.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,151.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,152.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,153.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,154.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,155.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,156.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,157.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,158.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,159.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,160.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,161.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,162.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,163.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,164.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,165.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,166.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,167.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,168.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,169.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,170.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,171.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,172.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,173.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,174.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,175.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,176.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,177.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,178.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,179.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,180.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,181.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,182.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,183.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,184.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,185.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,186.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,187.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,188.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,189.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,190.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,191.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,192.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,193.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,194.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,195.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,196.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,197.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,198.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,199.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,200.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,201.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,202.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,203.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,204.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,205.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,206.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,207.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,208.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,209.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,210.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,211.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,212.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,213.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,214.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,215.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,216.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,217.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,218.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,219.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,220.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,221.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,222.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,223.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,224.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,225.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,226.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,227.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,228.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,229.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,230.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,231.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,232.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,233.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,234.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,235.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,236.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,237.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,238.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,139.0E0,11138.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,140.0E0,11018.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,141.0E0,11018.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,142.0E0,11049.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,143.0E0,11049.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,144.0E0,10618.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,145.0E0,10618.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,146.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,147.0E0,10416.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,148.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,149.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,150.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,151.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,152.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,153.0E0,10507.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,154.0E0,11222.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,155.0E0,11222.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,156.0E0,11222.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,157.0E0,11222.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,158.0E0,11026.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,159.0E0,11026.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,21,160.0E0,11806.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,22,161.0E0,11806.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,23,162.0E0,10126.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,24,163.0E0,10126.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,25,164.0E0,9855.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,26,165.0E0,9855.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,27,166.0E0,9866.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,28,167.0E0,9866.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,29,168.0E0,9487.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,30,169.0E0,9487.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,31,170.0E0,9364.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,32,171.0E0,9364.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,33,172.0E0,9502.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,34,173.0E0,9502.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,35,174.0E0,10636.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,36,175.0E0,10636.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,37,176.0E0,9415.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,38,177.0E0,9415.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,39,178.0E0,10339.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,40,179.0E0,10339.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,41,180.0E0,10360.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,42,181.0E0,10360.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,43,182.0E0,10063.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,44,183.0E0,10063.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,45,184.0E0,10754.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,46,185.0E0,10754.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,47,186.0E0,10126.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,48,187.0E0,10126.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,49,188.0E0,9855.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,50,189.0E0,9855.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,51,190.0E0,9866.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,52,191.0E0,9866.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,53,192.0E0,9487.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,54,193.0E0,9487.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,55,194.0E0,9364.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,56,195.0E0,9364.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,57,196.0E0,9502.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,58,197.0E0,9502.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,59,198.0E0,10636.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,60,199.0E0,10636.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,61,200.0E0,9415.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,62,201.0E0,9415.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,63,202.0E0,10339.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,64,203.0E0,10339.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,65,204.0E0,10360.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,66,205.0E0,10360.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,67,206.0E0,10063.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,68,207.0E0,10063.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,69,208.0E0,10754.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,70,209.0E0,10754.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,71,210.0E0,10126.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,72,211.0E0,10126.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,73,212.0E0,9855.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,74,213.0E0,9855.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,75,214.0E0,9866.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,76,215.0E0,9866.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,77,216.0E0,9487.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,78,217.0E0,9487.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,79,218.0E0,9364.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,80,219.0E0,9364.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,81,220.0E0,9502.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,82,221.0E0,9502.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,83,222.0E0,10636.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,84,223.0E0,10636.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,85,224.0E0,9415.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,86,225.0E0,9415.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,87,226.0E0,10339.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,88,227.0E0,10339.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,89,228.0E0,10360.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,90,229.0E0,10360.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,91,230.0E0,10063.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,92,231.0E0,10063.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,93,232.0E0,10754.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,94,233.0E0,10754.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,95,234.0E0,10126.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,96,235.0E0,10126.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,97,236.0E0,9855.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,98,237.0E0,9855.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,99,238.0E0,9866.77584E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,139.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,140.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,141.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,142.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,143.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,144.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,145.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,146.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,147.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,148.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,149.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,150.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,151.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,152.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,153.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,154.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,155.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,156.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,157.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,158.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,159.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,21,160.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,22,161.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,23,162.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,24,163.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,25,164.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,26,165.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,27,166.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,28,167.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,29,168.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,30,169.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,31,170.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,32,171.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,33,172.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,34,173.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,35,174.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,36,175.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,37,176.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,38,177.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,39,178.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,40,179.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,41,180.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,42,181.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,43,182.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,44,183.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,45,184.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,46,185.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,47,186.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,48,187.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,49,188.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,50,189.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,51,190.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,52,191.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,53,192.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,54,193.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,55,194.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,56,195.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,57,196.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,58,197.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,59,198.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,60,199.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,61,200.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,62,201.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,63,202.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,64,203.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,65,204.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,66,205.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,67,206.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,68,207.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,69,208.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,70,209.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,71,210.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,72,211.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,73,212.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,74,213.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,75,214.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,76,215.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,77,216.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,78,217.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,79,218.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,80,219.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,81,220.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,82,221.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,83,222.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,84,223.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,85,224.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,86,225.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,87,226.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,88,227.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,89,228.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,90,229.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,91,230.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,92,231.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,93,232.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,94,233.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,95,234.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,96,235.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,97,236.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,98,237.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,99,238.0E0,10849.6E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,139.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,140.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,141.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,142.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,143.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,144.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,145.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,146.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,147.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,148.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,149.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,150.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,151.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,152.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,153.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,154.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,155.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,156.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,157.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,158.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,159.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,21,160.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,22,161.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,23,162.0E0,228395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,24,163.0E0,228395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,25,164.0E0,273729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,26,165.0E0,273729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,27,166.0E0,294847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,28,167.0E0,294847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,29,168.0E0,264251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,30,169.0E0,264251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,31,170.0E0,240531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,32,171.0E0,240531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,33,172.0E0,243395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,34,173.0E0,243395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,35,174.0E0,185920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,36,175.0E0,185920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,37,176.0E0,252667.03199999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,38,177.0E0,252667.03199999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,39,178.0E0,204781.43999999974E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,40,179.0E0,204781.43999999974E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,41,180.0E0,183763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,42,181.0E0,183763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,43,182.0E0,213852.47999999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,44,183.0E0,213852.47999999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,45,184.0E0,255531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,46,185.0E0,255531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,47,186.0E0,228395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,48,187.0E0,228395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,49,188.0E0,273729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,50,189.0E0,273729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,51,190.0E0,294847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,52,191.0E0,294847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,53,192.0E0,264251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,54,193.0E0,264251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,55,194.0E0,240531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,56,195.0E0,240531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,57,196.0E0,243395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,58,197.0E0,243395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,59,198.0E0,185920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,60,199.0E0,185920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,61,200.0E0,252667.03199999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,62,201.0E0,252667.03199999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,63,202.0E0,204781.43999999974E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,64,203.0E0,204781.43999999974E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,65,204.0E0,183763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,66,205.0E0,183763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,67,206.0E0,213852.47999999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,68,207.0E0,213852.47999999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,69,208.0E0,255531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,70,209.0E0,255531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,71,210.0E0,228395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,72,211.0E0,228395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,73,212.0E0,273729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,74,213.0E0,273729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,75,214.0E0,294847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,76,215.0E0,294847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,77,216.0E0,264251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,78,217.0E0,264251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,79,218.0E0,240531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,80,219.0E0,240531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,81,220.0E0,243395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,82,221.0E0,243395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,83,222.0E0,185920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,84,223.0E0,185920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,85,224.0E0,252667.03199999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,86,225.0E0,252667.03199999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,87,226.0E0,204781.43999999974E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,88,227.0E0,204781.43999999974E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,89,228.0E0,183763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,90,229.0E0,183763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,91,230.0E0,213852.47999999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,92,231.0E0,213852.47999999992E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,93,232.0E0,255531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,94,233.0E0,255531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,95,234.0E0,228395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,96,235.0E0,228395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,97,236.0E0,273729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,98,237.0E0,273729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,99,238.0E0,294847.248E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(1,0)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,0,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(3,2)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,2,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(5,4)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,4,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(7,6)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,6,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C161*/SET SCHEMA PUBLIC
DISCONNECT
/*C165*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 11:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,10139.7952E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,264781.43999999977E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,0.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C164*/SET SCHEMA PUBLIC
DISCONNECT
/*C167*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 17:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,0.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,363.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C166*/SET SCHEMA PUBLIC
DISCONNECT
/*C169*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,0.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C168*/SET SCHEMA PUBLIC
DISCONNECT
/*C171*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,250.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,0.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C170*/SET SCHEMA PUBLIC
DISCONNECT
/*C173*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-21 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-22 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-23 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-24 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-25 19:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,184.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,185.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,186.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,187.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,188.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,189.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,190.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,191.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,192.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,193.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,194.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,195.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,196.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,197.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,198.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,199.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,200.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,201.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,202.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,203.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,204.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,205.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,206.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,207.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,208.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,209.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,210.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,211.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,212.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,213.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,214.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,215.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,216.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,217.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,218.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,219.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,220.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,221.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,222.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,223.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,224.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,225.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,226.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,227.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,228.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,229.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,230.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,231.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,232.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,233.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,234.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,235.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,236.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,237.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,238.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,239.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,240.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,241.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,242.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,243.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,244.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,245.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,246.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,247.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,248.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,249.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,250.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,251.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,252.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,253.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,254.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,255.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,256.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,257.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,258.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,259.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,260.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,261.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,262.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,263.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,264.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,265.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,266.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,267.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,268.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,269.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,270.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,271.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,272.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,273.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,274.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,275.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,276.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,277.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,278.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,279.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,280.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,281.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,282.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,283.0E0,1162.43064E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,184.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,185.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,186.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,187.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,188.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,189.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,190.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,191.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,192.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,193.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,194.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,195.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,196.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,197.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,198.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,199.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,200.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,201.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,202.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,203.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,204.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,205.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,206.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,207.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,208.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,209.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,210.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,211.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,212.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,213.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,214.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,215.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,216.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,217.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,218.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,219.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,220.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,221.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,222.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,223.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,224.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,225.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,226.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,227.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,228.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,229.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,230.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,231.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,232.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,233.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,234.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,235.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,236.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,237.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,238.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,239.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,240.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,241.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,242.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,243.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,244.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,245.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,246.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,247.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,248.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,249.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,250.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,251.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,252.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,253.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,254.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,255.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,256.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,257.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,258.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,259.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,260.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,261.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,262.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,263.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,264.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,265.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,266.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,267.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,268.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,269.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,270.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,271.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,272.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,273.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,274.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,275.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,276.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,277.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,278.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,279.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,280.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,281.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,282.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,283.0E0,250.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,184.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,185.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,186.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,187.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,188.0E0,9605.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,189.0E0,9605.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,190.0E0,9666.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,191.0E0,9666.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,192.0E0,9237.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,193.0E0,9237.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,194.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,195.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,196.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,197.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,198.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,199.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,200.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,201.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,202.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,203.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,204.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,205.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,206.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,207.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,208.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,209.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,210.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,211.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,212.0E0,9605.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,213.0E0,9605.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,214.0E0,9666.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,215.0E0,9666.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,216.0E0,9237.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,217.0E0,9237.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,218.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,219.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,220.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,221.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,222.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,223.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,224.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,225.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,226.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,227.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,228.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,229.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,230.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,231.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,232.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,233.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,234.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,235.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,236.0E0,9605.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,237.0E0,9605.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,238.0E0,9666.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,239.0E0,9666.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,240.0E0,9237.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,241.0E0,9237.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,242.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,243.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,244.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,245.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,246.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,247.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,248.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,249.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,250.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,251.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,252.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,253.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,254.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,255.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,256.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,257.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,258.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,259.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,260.0E0,9605.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,261.0E0,9605.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,262.0E0,9666.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,263.0E0,9666.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,264.0E0,9237.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,265.0E0,9237.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,266.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,267.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,268.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,269.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,270.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,271.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,272.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,273.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,274.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,275.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,276.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,277.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,278.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,279.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,280.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,281.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,282.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,283.0E0,9876.682E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,184.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,185.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,186.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,187.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,188.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,189.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,190.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,191.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,192.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,193.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,194.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,195.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,196.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,197.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,198.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,199.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,200.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,201.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,202.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,203.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,204.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,21,205.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,22,206.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,23,207.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,24,208.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,25,209.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,26,210.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,27,211.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,28,212.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,29,213.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,30,214.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,31,215.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,32,216.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,33,217.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,34,218.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,35,219.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,36,220.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,37,221.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,38,222.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,39,223.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,40,224.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,41,225.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,42,226.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,43,227.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,44,228.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,45,229.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,46,230.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,47,231.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,48,232.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,49,233.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,50,234.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,51,235.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,52,236.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,53,237.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,54,238.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,55,239.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,56,240.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,57,241.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,58,242.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,59,243.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,60,244.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,61,245.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,62,246.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,63,247.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,64,248.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,65,249.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,66,250.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,67,251.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,68,252.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,69,253.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,70,254.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,71,255.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,72,256.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,73,257.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,74,258.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,75,259.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,76,260.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,77,261.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,78,262.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,79,263.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,80,264.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,81,265.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,82,266.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,83,267.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,84,268.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,85,269.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,86,270.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,87,271.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,88,272.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,89,273.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,90,274.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,91,275.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,92,276.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,93,277.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,94,278.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,95,279.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,96,280.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,97,281.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,98,282.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,99,283.0E0,10888.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,184.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,185.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,186.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,187.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,188.0E0,348729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,189.0E0,348729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,190.0E0,354847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,191.0E0,354847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,192.0E0,339251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,193.0E0,339251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,194.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,195.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,196.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,197.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,198.0E0,260920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,199.0E0,260920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,200.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,201.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,202.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,203.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,204.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,21,205.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,22,206.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,23,207.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,24,208.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,25,209.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,26,210.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,27,211.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,28,212.0E0,348729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,29,213.0E0,348729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,30,214.0E0,354847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,31,215.0E0,354847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,32,216.0E0,339251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,33,217.0E0,339251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,34,218.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,35,219.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,36,220.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,37,221.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,38,222.0E0,260920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,39,223.0E0,260920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,40,224.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,41,225.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,42,226.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,43,227.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,44,228.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,45,229.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,46,230.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,47,231.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,48,232.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,49,233.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,50,234.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,51,235.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,52,236.0E0,348729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,53,237.0E0,348729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,54,238.0E0,354847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,55,239.0E0,354847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,56,240.0E0,339251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,57,241.0E0,339251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,58,242.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,59,243.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,60,244.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,61,245.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,62,246.0E0,260920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,63,247.0E0,260920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,64,248.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,65,249.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,66,250.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,67,251.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,68,252.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,69,253.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,70,254.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,71,255.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,72,256.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,73,257.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,74,258.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,75,259.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,76,260.0E0,348729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,77,261.0E0,348729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,78,262.0E0,354847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,79,263.0E0,354847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,80,264.0E0,339251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,81,265.0E0,339251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,82,266.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,83,267.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,84,268.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,85,269.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,86,270.0E0,260920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,87,271.0E0,260920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,88,272.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,89,273.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,90,274.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,91,275.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,92,276.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,93,277.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,94,278.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,95,279.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,96,280.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,97,281.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,98,282.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,99,283.0E0,303395.3999999998E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,184.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,185.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,186.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,187.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,188.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,189.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,190.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,191.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,192.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,193.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,194.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,195.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,196.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,197.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,198.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,199.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,200.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,201.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,202.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,203.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,204.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,21,205.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,22,206.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,23,207.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,24,208.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,25,209.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,26,210.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,27,211.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,28,212.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,29,213.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,30,214.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,31,215.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,32,216.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,33,217.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,34,218.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,35,219.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,36,220.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,37,221.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,38,222.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,39,223.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,40,224.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,41,225.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,42,226.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,43,227.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,44,228.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,45,229.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,46,230.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,47,231.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,48,232.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,49,233.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,50,234.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,51,235.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,52,236.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,53,237.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,54,238.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,55,239.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,56,240.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,57,241.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,58,242.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,59,243.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,60,244.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,61,245.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,62,246.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,63,247.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,64,248.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,65,249.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,66,250.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,67,251.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,68,252.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,69,253.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,70,254.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,71,255.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,72,256.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,73,257.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,74,258.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,75,259.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,76,260.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,77,261.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,78,262.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,79,263.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,80,264.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,81,265.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,82,266.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,83,267.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,84,268.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,85,269.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,86,270.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,87,271.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,88,272.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,89,273.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,90,274.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,91,275.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,92,276.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,93,277.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,94,278.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,95,279.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,96,280.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,97,281.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,98,282.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,99,283.0E0,417.24E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C172*/SET SCHEMA PUBLIC
DISCONNECT
/*C175*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,0.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C174*/SET SCHEMA PUBLIC
DISCONNECT
/*C177*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 16:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,0.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,363.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C176*/SET SCHEMA PUBLIC
DISCONNECT
/*C179*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 03:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,23.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,24.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,25.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,26.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,27.0E0,849.5071200000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,23.0E0,400.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,24.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,25.0E0,500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,26.0E0,244.22722829669712E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,27.0E0,244.22722829669712E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,10513.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,11506.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,10757.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,10757.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,11422.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,11422.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,11472.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,11472.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,11276.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,11276.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,10954.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,10954.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,10376.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,10376.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,10105.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,10105.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,10066.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,23.0E0,10066.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,24.0E0,9737.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,25.0E0,9737.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,26.0E0,9419.91331537087E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,27.0E0,9419.91331537087E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,21,21.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,22,22.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,23,23.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,24,24.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,25,25.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,26,26.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,27,27.0E0,10166.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,-150000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,-150000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,-120000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,-120000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,-150000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,-150000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,-150000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,-150000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,195531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,195531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,153395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,19.0E0,153395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,20.0E0,198729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,21,21.0E0,198729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,22,22.0E0,234847.24800000002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,23,23.0E0,234847.24800000002E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,24,24.0E0,189251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,25,25.0E0,189251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,26,26.0E0,223946.00538873894E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,27,27.0E0,223946.00538873894E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,19.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,20.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,21,21.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,22,22.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,23,23.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,24,24.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,25,25.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,26,26.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,27,27.0E0,304.9200000000001E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C178*/SET SCHEMA PUBLIC
DISCONNECT
/*C181*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 03:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,23.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,24.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,25.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,26.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,27.0E0,849.5071200000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,295.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,295.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,295.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,295.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,295.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,295.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,23.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,24.0E0,295.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,25.0E0,295.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,26.0E0,236.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,27.0E0,236.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,11183.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,11183.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,11063.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,11063.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,11085.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,23.0E0,11085.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,24.0E0,10663.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,25.0E0,10663.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,26.0E0,10461.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,27.0E0,10461.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,21,21.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,22,22.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,23,23.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,24,24.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,25,25.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,26,26.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,27,27.0E0,10166.4E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,-88500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,19.0E0,-88500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,20.0E0,-88500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,21,21.0E0,-88500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,22,22.0E0,-70800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,23,23.0E0,-70800.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,24,24.0E0,-88500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,25,25.0E0,-88500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,26,26.0E0,-88500.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,27,27.0E0,-88500.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,19.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,20.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,21,21.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,22,22.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,23,23.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,24,24.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,25,25.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,26,26.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,27,27.0E0,304.9200000000001E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C180*/SET SCHEMA PUBLIC
DISCONNECT
/*C183*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 16:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,23.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,24.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,25.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,26.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,27.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,28.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,29.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,30.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,31.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,32.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,33.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,34.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,35.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,36.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,37.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,38.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,39.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,40.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,23.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,24.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,25.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,26.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,27.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,28.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,29.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,30.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,31.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,32.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,33.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,34.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,35.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,36.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,37.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,38.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,39.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,40.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,9876.682E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,9605.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,9605.56936E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,9666.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,23.0E0,9666.77584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,24.0E0,9237.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,25.0E0,9237.1626E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,26.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,27.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,28.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,29.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,30.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,31.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,32.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,33.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,34.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,35.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,36.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,37.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,38.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,39.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,40.0E0,10554.629280000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,21,21.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,22,22.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,23,23.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,24,24.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,25,25.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,26,26.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,27,27.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,28,28.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,29,29.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,30,30.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,31,31.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,32,32.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,33,33.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,34,34.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,35,35.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,36,36.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,37,37.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,38,38.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,39,39.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,40,40.0E0,11606.400000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,19.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,20.0E0,348729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,21,21.0E0,348729.19200000016E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,22,22.0E0,354847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,23,23.0E0,354847.248E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,24,24.0E0,339251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,25,25.0E0,339251.2200000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,26,26.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,27,27.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,28,28.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,29,29.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,30,30.0E0,260920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,31,31.0E0,260920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,32,32.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,33,33.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,34,34.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,35,35.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,36,36.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,37,37.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,38,38.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,39,39.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,40,40.0E0,315531.21600000013E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,19.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,20.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,21,21.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,22,22.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,23,23.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,24,24.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,25,25.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,26,26.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,27,27.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,28,28.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,29,29.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,30,30.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,31,31.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,32,32.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,33,33.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,34,34.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,35,35.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,36,36.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,37,37.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,38,38.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,39,39.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,40,40.0E0,363.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C182*/SET SCHEMA PUBLIC
DISCONNECT
/*C185*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 17:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,10386.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,9165.37656E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,10139.7952E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,10110.2544E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,9813.1584E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,10554.629280000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,10554.629280000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,260920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,260920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,327667.03199999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,264781.43999999977E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,258763.67999999985E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,288852.4799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,315531.21600000013E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,363.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C184*/SET SCHEMA PUBLIC
DISCONNECT
/*C187*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 04:00:00.000000')
COMMIT
DISCONNECT
/*C188*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-16 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-17 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-18 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-19 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-20 16:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,61.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,62.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,63.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,64.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,65.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,66.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,67.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,68.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,69.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,70.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,71.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,72.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,73.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,74.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,75.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,76.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,77.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,78.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,79.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,80.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,81.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,82.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,83.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,84.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,85.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,86.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,87.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,88.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,89.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,90.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,91.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,92.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,32,93.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,33,94.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,34,95.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,35,96.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,36,97.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,37,98.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,38,99.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,39,100.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,40,101.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,41,102.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,42,103.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,43,104.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,44,105.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,45,106.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,46,107.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,47,108.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,48,109.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,49,110.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,50,111.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,51,112.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,52,113.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,53,114.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,54,115.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,55,116.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,56,117.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,57,118.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,58,119.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,59,120.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,60,121.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,61,122.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,62,123.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,63,124.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,64,125.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,65,126.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,66,127.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,67,128.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,68,129.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,69,130.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,70,131.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,71,132.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,72,133.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,73,134.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,74,135.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,75,136.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,76,137.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,77,138.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,78,139.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,79,140.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,80,141.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,81,142.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,82,143.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,83,144.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,84,145.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,85,146.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,86,147.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,87,148.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,88,149.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,89,150.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,90,151.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,91,152.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,92,153.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,93,154.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,94,155.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,95,156.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,96,157.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,97,158.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,98,159.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,99,160.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,61.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,62.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,63.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,64.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,65.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,66.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,67.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,68.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,69.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,70.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,71.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,72.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,73.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,74.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,75.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,76.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,77.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,78.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,79.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,80.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,81.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,82.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,83.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,84.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,85.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,86.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,87.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,88.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,89.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,90.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,91.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,92.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,32,93.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,33,94.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,34,95.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,35,96.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,36,97.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,37,98.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,38,99.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,39,100.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,40,101.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,41,102.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,42,103.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,43,104.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,44,105.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,45,106.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,46,107.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,47,108.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,48,109.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,49,110.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,50,111.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,51,112.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,52,113.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,53,114.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,54,115.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,55,116.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,56,117.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,57,118.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,58,119.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,59,120.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,60,121.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,61,122.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,62,123.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,63,124.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,64,125.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,65,126.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,66,127.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,67,128.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,68,129.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,69,130.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,70,131.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,71,132.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,72,133.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,73,134.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,74,135.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,75,136.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,76,137.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,77,138.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,78,139.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,79,140.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,80,141.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,81,142.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,82,143.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,83,144.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,84,145.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,85,146.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,86,147.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,87,148.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,88,149.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,89,150.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,90,151.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,91,152.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,92,153.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,93,154.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,94,155.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,95,156.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,96,157.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,97,158.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,98,159.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,99,160.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,61.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,62.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,63.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,64.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,65.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,66.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,67.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,68.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,69.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,70.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,71.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,72.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,73.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,74.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,75.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,76.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,77.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,78.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,79.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,80.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,81.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,82.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,83.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,84.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,85.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,86.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,87.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,88.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,89.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,90.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,91.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,92.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,32,93.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,33,94.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,34,95.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,35,96.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,36,97.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,37,98.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,38,99.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,39,100.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,40,101.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,41,102.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,42,103.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,43,104.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,44,105.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,45,106.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,46,107.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,47,108.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,48,109.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,49,110.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,50,111.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,51,112.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,52,113.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,53,114.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,54,115.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,55,116.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,56,117.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,57,118.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,58,119.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,59,120.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,60,121.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,61,122.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,62,123.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,63,124.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,64,125.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,65,126.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,66,127.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,67,128.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,68,129.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,69,130.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,70,131.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,71,132.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,72,133.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,73,134.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,74,135.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,75,136.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,76,137.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,77,138.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,78,139.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,79,140.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,80,141.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,81,142.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,82,143.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,83,144.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,84,145.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,85,146.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,86,147.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,87,148.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,88,149.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,89,150.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,90,151.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,91,152.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,92,153.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,93,154.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,94,155.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,95,156.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,96,157.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,97,158.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,98,159.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,99,160.0E0,11606.400000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,61.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,62.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,63.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,64.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,65.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,66.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,67.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,68.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,69.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,70.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,71.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,72.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,73.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,74.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,75.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,76.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,77.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,78.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,79.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,80.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,81.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,21,82.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,22,83.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,23,84.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,24,85.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,25,86.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,26,87.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,27,88.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,28,89.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,29,90.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,30,91.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,31,92.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,32,93.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,33,94.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,34,95.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,35,96.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,36,97.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,37,98.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,38,99.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,39,100.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,40,101.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,41,102.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,42,103.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,43,104.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,44,105.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,45,106.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,46,107.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,47,108.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,48,109.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,49,110.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,50,111.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,51,112.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,52,113.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,53,114.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,54,115.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,55,116.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,56,117.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,57,118.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,58,119.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,59,120.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,60,121.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,61,122.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,62,123.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,63,124.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,64,125.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,65,126.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,66,127.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,67,128.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,68,129.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,69,130.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,70,131.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,71,132.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,72,133.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,73,134.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,74,135.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,75,136.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,76,137.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,77,138.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,78,139.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,79,140.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,80,141.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,81,142.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,82,143.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,83,144.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,84,145.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,85,146.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,86,147.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,87,148.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,88,149.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,89,150.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,90,151.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,91,152.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,92,153.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,93,154.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,94,155.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,95,156.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,96,157.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,97,158.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,98,159.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,99,160.0E0,11606.400000000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,61.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,62.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,63.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,64.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,65.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,66.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,67.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,68.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,69.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,70.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,71.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,72.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,73.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,74.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,75.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,76.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,77.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,78.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,79.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,80.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,81.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,21,82.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,22,83.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,23,84.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,24,85.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,25,86.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,26,87.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,27,88.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,28,89.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,29,90.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,30,91.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,31,92.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,32,93.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,33,94.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,34,95.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,35,96.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,36,97.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,37,98.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,38,99.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,39,100.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,40,101.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,41,102.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,42,103.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,43,104.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,44,105.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,45,106.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,46,107.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,47,108.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,48,109.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,49,110.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,50,111.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,51,112.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,52,113.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,53,114.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,54,115.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,55,116.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,56,117.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,57,118.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,58,119.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,59,120.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,60,121.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,61,122.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,62,123.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,63,124.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,64,125.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,65,126.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,66,127.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,67,128.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,68,129.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,69,130.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,70,131.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,71,132.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,72,133.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,73,134.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,74,135.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,75,136.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,76,137.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,77,138.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,78,139.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,79,140.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,80,141.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,81,142.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,82,143.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,83,144.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,84,145.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,85,146.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,86,147.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,87,148.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,88,149.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,89,150.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,90,151.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,91,152.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,92,153.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,93,154.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,94,155.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,95,156.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,96,157.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,97,158.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,98,159.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,99,160.0E0,0.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,61.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,62.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,63.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,64.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,65.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,66.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,67.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,68.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,69.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,70.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,71.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,72.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,73.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,74.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,75.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,76.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,77.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,78.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,79.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,80.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,81.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,21,82.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,22,83.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,23,84.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,24,85.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,25,86.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,26,87.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,27,88.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,28,89.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,29,90.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,30,91.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,31,92.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,32,93.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,33,94.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,34,95.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,35,96.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,36,97.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,37,98.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,38,99.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,39,100.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,40,101.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,41,102.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,42,103.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,43,104.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,44,105.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,45,106.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,46,107.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,47,108.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,48,109.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,49,110.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,50,111.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,51,112.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,52,113.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,53,114.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,54,115.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,55,116.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,56,117.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,57,118.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,58,119.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,59,120.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,60,121.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,61,122.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,62,123.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,63,124.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,64,125.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,65,126.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,66,127.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,67,128.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,68,129.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,69,130.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,70,131.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,71,132.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,72,133.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,73,134.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,74,135.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,75,136.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,76,137.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,77,138.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,78,139.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,79,140.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,80,141.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,81,142.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,82,143.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,83,144.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,84,145.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,85,146.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,86,147.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,87,148.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,88,149.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,89,150.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,90,151.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,91,152.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,92,153.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,93,154.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,94,155.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,95,156.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,96,157.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,97,158.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,98,159.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,99,160.0E0,363.0E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C186*/SET SCHEMA PUBLIC
DISCONNECT
/*C190*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 20:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 21:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 22:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 23:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-15 07:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,21,21.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,22,22.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,23,23.0E0,1171.95876E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,24,24.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,25,25.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,26,26.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,27,27.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,28,28.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,29,29.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,30,30.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,31,31.0E0,849.5071200000003E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,21,21.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,22,22.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,23,23.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,24,24.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,25,25.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,26,26.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,27,27.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,28,28.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,29,29.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,30,30.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,31,31.0E0,250.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,11806.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,11806.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,11138.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,11138.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,11018.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,21,21.0E0,11018.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,22,22.0E0,11049.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,23,23.0E0,11049.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,24,24.0E0,10618.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,25,25.0E0,10618.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,26,26.0E0,9364.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,27,27.0E0,9364.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,28,28.0E0,9502.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,29,29.0E0,9502.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,30,30.0E0,10636.266520000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,31,31.0E0,10636.266520000001E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,21,21.0E0,10768.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,22,22.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,23,23.0E0,10849.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,24,24.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,25,25.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,26,26.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,27,27.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,28,28.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,29,29.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,30,30.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,31,31.0E0,11256.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,19.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,20.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,21,21.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,22,22.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,23,23.0E0,-60000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,24,24.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,25,25.0E0,-75000.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,26,26.0E0,240531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,27,27.0E0,240531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,28,28.0E0,243395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,29,29.0E0,243395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,30,30.0E0,185920.0439999997E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,31,31.0E0,185920.0439999997E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,19.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,20.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,21,21.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,22,22.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,23,23.0E0,420.66E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,24,24.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,25,25.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,26,26.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,27,27.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,28,28.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,29,29.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,30,30.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,31,31.0E0,304.9200000000001E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C189*/SET SCHEMA PUBLIC
DISCONNECT
/*C192*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'coalmining.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'coalmining.CMM_generation')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<CMM_generation>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'coalmining.CH4')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'?<CH4>','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'coalmining.DataCenter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'?<DataCenter>','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.cMM_generation','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=2
INSERT INTO AGENTS_RAW_LOG VALUES(2,2,'root.cH4','2022-05-14 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=3
INSERT INTO AGENTS_RAW_LOG VALUES(3,3,'root.dataCenter','2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,0,'Torch_image')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 00:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 01:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 02:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 03:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 04:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 05:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 06:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 07:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 08:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 09:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 10:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 11:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 12:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 13:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 14:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 15:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 16:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 17:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 18:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 19:00:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-05-14 20:00:00.000000')
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(0,1,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,0,0.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,1,1.0E0,1060.46304E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,2,2.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,3,3.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,4,4.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,5,5.0E0,991.0916400000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,6,6.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,7,7.0E0,849.5071200000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,8,8.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,9,9.0E0,942.7824E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,10,10.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,11,11.0E0,882.6048000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,12,12.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,13,13.0E0,1223.6112000000003E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,14,14.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,15,15.0E0,869.7334799999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,16,16.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,17,17.0E0,1011.3180000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,18,18.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,19,19.0E0,1162.43064E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(0,20,20.0E0,1162.43064E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(1,3,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,0,0.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,1,1.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,2,2.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,3,3.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,4,4.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,5,5.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,6,6.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,7,7.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,8,8.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,9,9.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,10,10.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,11,11.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,12,12.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,13,13.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,14,14.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,15,15.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,16,16.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,17,17.0E0,200.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,18,18.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,19,19.0E0,250.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(1,20,20.0E0,200.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(2,0,'plot1 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,2,2.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,3,3.0E0,9114.62928E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,4,4.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,5,5.0E0,9302.282E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(2,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(3,0,'plot2 : Value_1')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,0,0.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,1,1.0E0,10368.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,2,2.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,3,3.0E0,10166.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,4,4.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,5,5.0E0,10313.599999999999E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,6,6.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,7,7.0E0,11256.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,8,8.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,9,9.0E0,10257.6E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,10,10.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,11,11.0E0,11022.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,12,12.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,13,13.0E0,10972.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,14,14.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,15,15.0E0,10776.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,16,16.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,17,17.0E0,11606.400000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,18,18.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,19,19.0E0,10888.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(3,20,20.0E0,10768.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(4,0,'plot3 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,0,0.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,1,1.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,2,2.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,3,3.0E0,315531.21600000013E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,4,4.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,5,5.0E0,303395.3999999998E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,6,6.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,7,7.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,8,8.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,9,9.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,10,10.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,11,11.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,12,12.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,13,13.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,14,14.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,15,15.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,16,16.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,17,17.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,18,18.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,19,19.0E0,0.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(4,20,20.0E0,0.0E0)
COMMIT
INSERT INTO AGENT_ELEMENTS_RAW_LOG VALUES(5,0,'plot4 : \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f')
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,0,0.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,1,1.0E0,380.64000000000004E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,2,2.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,3,3.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,4,4.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,5,5.0E0,355.74000000000007E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,6,6.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,7,7.0E0,304.9200000000001E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,8,8.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,9,9.0E0,338.4E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,10,10.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,11,11.0E0,316.8E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,12,12.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,13,13.0E0,439.20000000000005E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,14,14.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,15,15.0E0,312.17999999999995E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,16,16.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,17,17.0E0,363.0E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,18,18.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,19,19.0E0,417.24E0)
COMMIT
INSERT INTO DATASETS_RAW_LOG VALUES(5,20,20.0E0,417.24E0)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(1,2,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(2,2,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(2,1)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(2,1,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(3,1,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(4,1,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(4,3)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(1,3,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(5,3,'State')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(6,3,'entry')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(6,5)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(3,5,'2022-05-14 00:00:00.000000',NULL)
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(7,0,'state')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(8,0,'statechart')
COMMIT
INSERT INTO AGENT_TYPE_STATECHARTS_RAW_LOG VALUES(8,7)
COMMIT
INSERT INTO STATECHART_STATES_RAW_LOG VALUES(0,7,'2022-05-14 00:00:00.000000',NULL)
COMMIT
DISCONNECT
/*C191*/SET SCHEMA PUBLIC
DISCONNECT
